;;; Based on RFC5321 (Simple Mail Transfer Protocol)
;;; https://tools.ietf.org/rfc/rfc5321.txt
;;; + Added support for RFC6532 via RFC6531 (SMTP Extension for Internationalized Email)
;;;   https://tools.ietf.org/rfc/rfc6532.txt
;;;   https://tools.ietf.org/rfc/rfc6531.txt

;; Address specification

; Mailbox specification

mailbox         =   local-part "@" ( domain / address-literal )

; Domain specification

domain          =   sub-domain *("." sub-domain)

sub-domain      =   Let-dig [Ldh-str]

Let-dig         =   ALPHA / DIGIT

Ldh-str         =   *( ALPHA / DIGIT / "-" ) Let-dig

address-literal =   "[" ( IPv4-address-literal /
                       IPv6-address-literal /
                       General-address-literal ) "]"

; Lccal part specification

local-part      =   dot-string / quoted-string

dot-string      =   atom *("."  atom)

quoted-string   =   DQUOTE *qcontentSMTP DQUOTE

qcontentSMTP    =   qtextSMTP / quoted-pairSMTP

quoted-pairSMTP =   %d92 %d32-126   ; i.e., backslash followed by any ASCII
                                    ; graphic (including itself) or SPace

qtextSMTP       =   %d32-33 /       ; i.e., within a quoted string, any
                    %d35-91 /       ; ASCII graphic or space is permitted
                    %d93-126 /      ; without blackslash-quoting except
                    UTF8-non-ascii  ; double-quote and the backslash itself.

; Atom

atext           =   ALPHA / DIGIT / ; Printable US-ASCII
                    "!" / "#" /     ; characters not including
                    "$" / "%" /     ; specials. Used for atoms.
                    "&" / "'" /
                    "*" / "+" /
                    "-" / "/" /
                    "=" / "?" /
                    "^" / "_" /
                    "`" / "{" /
                    "|" / "}" /
                    "~" / UTF8-non-ascii

atom            =   1*atext

;; Internationalized Email Headers

UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4

; UTF-8 Byte Sequences (https://tools.ietf.org/rfc/rfc3629.txt)

UTF8-2          =   %xC2-DF UTF8-tail

UTF8-3          =   %xE0 %xA0-BF UTF8-tail / %xE1-EC 2( UTF8-tail ) /
                    %xED %x80-9F UTF8-tail / %xEE-EF 2( UTF8-tail )

UTF8-4          =   %xF0 %x90-BF 2( UTF8-tail ) / %xF1-F3 3( UTF8-tail ) /
                    %xF4 %x80-8F 2( UTF8-tail )

UTF8-tail       =   %x80-BF

;; SMTP Address Literals

dcontent        =   %d33-90 / ; Printable US-ASCII
                    %d94-126  ; excl. "[", "\", "]"

IPv4-address-literal     =   Snum 3("."  Snum)

IPv6-address-literal     =   "IPv6:" IPv6-addr

General-address-literal  =   Standardized-tag ":" 1*dcontent

Standardized-tag         =   Ldh-str

IPv6-addr       =   IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp

IPv6-hex        =   1*4HEXDIG

IPv6-full       =   IPv6-hex 7(":" IPv6-hex)

IPv6-comp       =   [IPv6-hex *5(":" IPv6-hex)] "::"
                    [IPv6-hex *5(":" IPv6-hex)]

IPv6v4-full     =   IPv6-hex 5(":" IPv6-hex) ":" IPv4-address-literal

IPv6v4-comp     =   [IPv6-hex *3(":" IPv6-hex)] "::"
                    [IPv6-hex *3(":" IPv6-hex) ":"]
                    IPv4-address-literal

Snum            =   1*3DIGIT

;; RFC4234 CORE (For abnfc binary compatability)

LF              =   %x0A                ; linefeed

CR              =   %x0D                ; carriage return

ALPHA           =   %x41-5A / %x61-7A   ; A-Z / a-z

DIGIT           =   %x30-39             ; 0-9

SP              =   %x20

HTAB            =   %x09                ; horizontal tab

WSP             =   SP / HTAB           ; white space

CRLF            =   CR LF               ; Internet standard newline

VCHAR           =   %x21-7E             ; visible (printing) characters

DQUOTE          =   %x22                ; " (Double Quote)

HEXDIG          =   DIGIT/ "A"/ "B"/ "C"/ "D"/ "E"/ "F" ; 0-9 A-F
